#!/bin/sh
# This shell script provides a predictable docker-based version of the application in use.
# Thereby creating a predictable environment for development, building, and debugging

IMAGE="node:14.15.0"
COMMAND="npm"

export DOCKER_OPTS="${DOCKER_OPTS:--it}"

# --user and --group-add options simulate the current user inside the docker container
# this is necessary because otherwise the npm command would run as root inside docker
# and the 'node_modules' folder on the host would then belong to host:$(pwd)/root:root
if [ "$(uname -s)" != "Darwin" ] && [ "$(expr substr "$(uname -s)" 1 5)" = "Linux" ]; then
  LINUX_OPTS="--user $(id -u)"
fi

# This docker command publishes port 3000 for serving react apps
# You can access your app at http://localhost:3000
# If you server uses different ports you can publish them as needed
exec docker run --rm ${LINUX_OPTS:-} "$DOCKER_OPTS"   \
  --volume  /var/run/docker.sock:/var/run/docker.sock \
  --volume  "$(pwd)":"$(pwd)"                         \
  --workdir "$(pwd)"                                  \
  --publish 3000:3000                                 \
  --publish 443:443                                   \
  --publish 80:80                                     \
  "$IMAGE" "$COMMAND" "$@"
